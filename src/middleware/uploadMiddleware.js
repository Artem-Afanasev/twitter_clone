// middleware/uploadMiddleware.js
import express from 'express';
import fileUpload from 'express-fileupload';
import path from 'path';
import fs from 'fs';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ê–ë–°–û–õ–Æ–¢–ù–´–ô –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ uploads
const UPLOADS_DIR = path.join(__dirname, '../uploads');

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫
const uploadDirs = [
    UPLOADS_DIR,
    path.join(UPLOADS_DIR, 'avatars'),
    path.join(UPLOADS_DIR, 'avatars/default'),
];

uploadDirs.forEach((dir) => {
    if (!fs.existsSync(dir)) {
        fs.mkdirSync(dir, { recursive: true });
        console.log(`‚úÖ Created directory: ${dir}`);
    }
});

console.log('üìÅ Uploads directory:', UPLOADS_DIR);

// Middleware –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
export const fileUploadMiddleware = fileUpload({
    createParentPath: true,
    limits: {
        fileSize: 5 * 1024 * 1024, // 5MB limit
    },
    abortOnLimit: true,
    responseOnLimit: 'File size limit has been reached',
});

// Middleware –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ - –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç—å
export const staticFilesMiddleware = express.static(UPLOADS_DIR);

export default { fileUploadMiddleware, staticFilesMiddleware };
