// middleware/uploadMiddleware.js
import express from 'express';
import fileUpload from 'express-fileupload';
import path from 'path';
import fs from 'fs';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ê–ë–°–û–õ–Æ–¢–ù–´–ô –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ uploads –≤ –ö–û–†–ù–ï –ø—Ä–æ–µ–∫—Ç–∞
const UPLOADS_DIR = path.join(process.cwd(), 'uploads'); // ‚Üê –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ!

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫
const uploadDirs = [UPLOADS_DIR, path.join(UPLOADS_DIR, 'avatars')];

uploadDirs.forEach((dir) => {
    if (!fs.existsSync(dir)) {
        fs.mkdirSync(dir, { recursive: true });
        console.log(`‚úÖ Created directory: ${dir}`);
    }
});

console.log('üìÅ Uploads directory:', UPLOADS_DIR);

// Middleware –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
export const fileUploadMiddleware = fileUpload({
    createParentPath: true, // ‚Üê –≠–¢–û —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–µ –ø–∞–ø–∫–∏! –£–±–µ—Ä–∏—Ç–µ –∏–ª–∏ –ø–æ—Å—Ç–∞–≤—å—Ç–µ false
    limits: {
        fileSize: 5 * 1024 * 1024, // 5MB limit
    },
    abortOnLimit: true,
    responseOnLimit: 'File size limit has been reached',
    useTempFiles: false, // ‚Üê –ù–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
});

// Middleware –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
export const staticFilesMiddleware = express.static(UPLOADS_DIR);

export default { fileUploadMiddleware, staticFilesMiddleware };
